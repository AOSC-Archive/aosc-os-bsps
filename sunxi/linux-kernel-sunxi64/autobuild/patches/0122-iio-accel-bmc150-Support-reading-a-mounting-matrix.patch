From 6fc105e4858563ffddd7f9bdead4e227585a4949 Mon Sep 17 00:00:00 2001
From: Icenowy Zheng <icenowy@aosc.io>
Date: Wed, 10 Apr 2019 13:14:04 +0800
Subject: [PATCH 122/131] iio: accel: bmc150: Support reading a mounting matrix

This adds support for the mounting matrix to the BMC150 driver.

Signed-off-by: Icenowy Zheng <icenowy@aosc.io>
---
 drivers/iio/accel/bmc150-accel-core.c | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/drivers/iio/accel/bmc150-accel-core.c b/drivers/iio/accel/bmc150-accel-core.c
index 383c802eb5b8..3ff2ca3b35a1 100644
--- a/drivers/iio/accel/bmc150-accel-core.c
+++ b/drivers/iio/accel/bmc150-accel-core.c
@@ -204,6 +204,7 @@ struct bmc150_accel_data {
 	int ev_enable_state;
 	int64_t timestamp, old_timestamp; /* Only used in hw fifo mode. */
 	const struct bmc150_accel_chip_info *chip_info;
+	struct iio_mount_matrix orientation;
 };
 
 static const struct {
@@ -963,10 +964,25 @@ static const struct iio_event_spec bmc150_accel_event = {
 				 BIT(IIO_EV_INFO_PERIOD)
 };
 
+static const struct iio_mount_matrix *
+bmc150_get_mount_matrix(const struct iio_dev *indio_dev,
+		        const struct iio_chan_spec *chan)
+{
+	struct bmc150_accel_data *data = iio_priv(indio_dev);
+
+	return &data->orientation;
+}
+
+static const struct iio_chan_spec_ext_info bmc150_ext_info[] = {
+	IIO_MOUNT_MATRIX(IIO_SHARED_BY_ALL, bmc150_get_mount_matrix),
+	{ },
+};
+
 #define BMC150_ACCEL_CHANNEL(_axis, bits) {				\
 	.type = IIO_ACCEL,						\
 	.modified = 1,							\
 	.channel2 = IIO_MOD_##_axis,					\
+	.ext_info = bmc150_ext_info,					\
 	.info_mask_separate = BIT(IIO_CHAN_INFO_RAW),			\
 	.info_mask_shared_by_type = BIT(IIO_CHAN_INFO_SCALE) |		\
 				BIT(IIO_CHAN_INFO_SAMP_FREQ),		\
@@ -1559,6 +1575,13 @@ int bmc150_accel_core_probe(struct device *dev, struct regmap *regmap, int irq,
 	if (ret < 0)
 		return ret;
 
+	/* Read the mounting matrix, if present */
+	ret = of_iio_read_mount_matrix(dev,
+				       "mount-matrix",
+				       &data->orientation);
+	if (ret)
+		return ret;
+
 	mutex_init(&data->mutex);
 
 	indio_dev->dev.parent = dev;
-- 
2.18.1

