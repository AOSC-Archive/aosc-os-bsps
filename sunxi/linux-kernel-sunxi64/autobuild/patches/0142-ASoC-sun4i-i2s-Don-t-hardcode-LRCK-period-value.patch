From b59ae4a2bdd6b2d68a34ed05601d993d11acf461 Mon Sep 17 00:00:00 2001
From: Marcus Cooper <codekipper@gmail.com>
Date: Sun, 19 Nov 2017 15:02:25 +0100
Subject: [PATCH 142/152] ASoC: sun4i-i2s: Don't hardcode LRCK period value

Currently LRCK period is hardcoded to 32. Unfortunately, some codecs
(e.g. A64 codec) cannot work with it, so calculate LRCK period
properly.

Signed-off-by: Marcus Cooper <codekipper@gmail.com>
---
 sound/soc/sunxi/sun4i-i2s.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/sound/soc/sunxi/sun4i-i2s.c b/sound/soc/sunxi/sun4i-i2s.c
index a4aa931ebfae..b3d7167ea589 100644
--- a/sound/soc/sunxi/sun4i-i2s.c
+++ b/sound/soc/sunxi/sun4i-i2s.c
@@ -275,7 +275,7 @@ static int sun4i_i2s_set_clk_rate(struct snd_soc_dai *dai,
 {
 	struct sun4i_i2s *i2s = snd_soc_dai_get_drvdata(dai);
 	unsigned int oversample_rate, clk_rate;
-	int bclk_div, mclk_div;
+	int bclk_div, mclk_div, lrck;
 	int ret;
 
 	switch (rate) {
@@ -330,6 +330,8 @@ static int sun4i_i2s_set_clk_rate(struct snd_soc_dai *dai,
 		return -EINVAL;
 	}
 
+	lrck = (clk_rate / rate / oversample_rate) * word_size;
+
 	/* Adjust the clock division values if needed */
 	bclk_div += i2s->variant->bclk_offset;
 	mclk_div += i2s->variant->mclk_offset;
@@ -344,7 +346,7 @@ static int sun4i_i2s_set_clk_rate(struct snd_soc_dai *dai,
 	if (i2s->variant->has_fmt_set_lrck_period)
 		regmap_update_bits(i2s->regmap, SUN4I_I2S_FMT0_REG,
 				   SUN8I_I2S_FMT0_LRCK_PERIOD_MASK,
-				   SUN8I_I2S_FMT0_LRCK_PERIOD(32));
+				   SUN8I_I2S_FMT0_LRCK_PERIOD(lrck));
 
 	return 0;
 }
-- 
2.18.1

