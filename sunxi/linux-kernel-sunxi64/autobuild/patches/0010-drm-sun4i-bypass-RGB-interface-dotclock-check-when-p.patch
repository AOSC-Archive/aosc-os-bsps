From 4c92b6ccd3f6a45a382d355a4e00c6391787d32b Mon Sep 17 00:00:00 2001
From: Icenowy Zheng <icenowy@aosc.io>
Date: Sat, 13 Jan 2018 13:22:25 +0800
Subject: [PATCH 010/147] drm: sun4i: bypass RGB interface dotclock check when
 panel is used

The RGB interface code of sun4i-drm has a dotclock check, which is used
to prevent not supported resolutions when a bridge is used.

However, it prevents most of the panels in panel-simple driver from
being used, as the dotclock may not be divided precisely to the dotclock
in panel-simple driver.

Bypass the dotclock check when a panel is used.

Signed-off-by: Icenowy Zheng <icenowy@aosc.io>
---
 drivers/gpu/drm/sun4i/sun4i_rgb.c | 24 ++++++++++++++++--------
 1 file changed, 16 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/sun4i/sun4i_rgb.c b/drivers/gpu/drm/sun4i/sun4i_rgb.c
index cae19e7bbeaa..e83b5e050f9e 100644
--- a/drivers/gpu/drm/sun4i/sun4i_rgb.c
+++ b/drivers/gpu/drm/sun4i/sun4i_rgb.c
@@ -94,14 +94,22 @@ static enum drm_mode_status sun4i_rgb_mode_valid(struct drm_encoder *crtc,
 
 	tcon->dclk_min_div = 6;
 	tcon->dclk_max_div = 127;
-	rounded_rate = clk_round_rate(tcon->dclk, rate);
-	if (rounded_rate < rate)
-		return MODE_CLOCK_LOW;
-
-	if (rounded_rate > rate)
-		return MODE_CLOCK_HIGH;
-
-	DRM_DEBUG_DRIVER("Clock rate OK\n");
+	switch (crtc->encoder_type) {
+	case DRM_MODE_ENCODER_LVDS:
+	case DRM_MODE_ENCODER_NONE:
+		DRM_DEBUG_DRIVER("Bypass dotclock check\n");
+		break;
+	default:
+		rounded_rate = clk_round_rate(tcon->dclk, rate);
+		if (rounded_rate < rate)
+			return MODE_CLOCK_LOW;
+
+		if (rounded_rate > rate)
+			return MODE_CLOCK_HIGH;
+
+		DRM_DEBUG_DRIVER("Clock rate OK\n");
+		break;
+	}
 
 	return MODE_OK;
 }
-- 
2.21.0

