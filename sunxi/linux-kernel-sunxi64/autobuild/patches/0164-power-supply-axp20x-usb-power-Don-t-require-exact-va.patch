From 27b409d9f91765d3f86a6cf35440a4b9c9e8d1c1 Mon Sep 17 00:00:00 2001
From: Ondrej Jirman <megous@megous.com>
Date: Mon, 30 Nov 2020 05:58:12 +0100
Subject: [PATCH 164/199] power: supply: axp20x-usb-power: Don't require exact
 values for input current limit

Available values are not enumerable, and usb type-c driver needs
to set lower or equal current limits after PD negotiation.

Signed-off-by: Ondrej Jirman <megous@megous.com>
Signed-off-by: Icenowy Zheng <icenowy@aosc.io>
---
 drivers/power/supply/axp20x_usb_power.c | 73 +++++++++++--------------
 1 file changed, 31 insertions(+), 42 deletions(-)

diff --git a/drivers/power/supply/axp20x_usb_power.c b/drivers/power/supply/axp20x_usb_power.c
index 741c81a8858a..482f19e41e92 100644
--- a/drivers/power/supply/axp20x_usb_power.c
+++ b/drivers/power/supply/axp20x_usb_power.c
@@ -451,6 +451,37 @@ static int axp20x_usb_power_set_voltage_min(struct axp20x_usb_power *power,
 	return -EINVAL;
 }
 
+static const unsigned axp813_input_current_limits_table[] = {
+	100000,
+	500000,
+	900000,
+	1500000,
+	2000000,
+	2500000,
+	3000000,
+	3500000,
+	4000000,
+};
+
+static int
+axp813_usb_power_set_input_current_limit(struct axp20x_usb_power *power,
+					 int intval)
+{
+	unsigned int reg;
+
+	if (intval < 100000)
+		return -EINVAL;
+
+	for (reg = ARRAY_SIZE(axp813_input_current_limits_table) - 1; reg > 0; reg--)
+		if (intval >= axp813_input_current_limits_table[reg])
+			break;
+
+	return regmap_update_bits(power->regmap,
+				  AXP813_CHRG_CTRL3,
+				  AXP813_CHRG_CTRL3_VBUS_CUR_LIMIT_MASK,
+				  reg << AXP813_CHRG_CTRL3_VBUS_CUR_LIMIT_OFFSET);
+}
+
 static int axp813_usb_power_set_current_max(struct axp20x_usb_power *power,
 					    int intval)
 {
@@ -504,48 +535,6 @@ static int axp20x_usb_power_set_current_max(struct axp20x_usb_power *power,
 	return -EINVAL;
 }
 
-static int axp813_usb_power_set_input_current_limit(struct axp20x_usb_power *power,
-						    int intval)
-{
-	int val;
-
-	switch (intval) {
-	case 100000:
-		val = AXP813_VBUS_CLIMIT_REAL_100mA;
-		break;
-	case 500000:
-		val = AXP813_VBUS_CLIMIT_REAL_500mA;
-		break;
-	case 900000:
-		val = AXP813_VBUS_CLIMIT_REAL_900mA;
-		break;
-	case 1500000:
-		val = AXP813_VBUS_CLIMIT_REAL_1500mA;
-		break;
-	case 2000000:
-		val = AXP813_VBUS_CLIMIT_REAL_2000mA;
-		break;
-	case 2500000:
-		val = AXP813_VBUS_CLIMIT_REAL_2500mA;
-		break;
-	case 3000000:
-		val = AXP813_VBUS_CLIMIT_REAL_3000mA;
-		break;
-	case 3500000:
-		val = AXP813_VBUS_CLIMIT_REAL_3500mA;
-		break;
-	case 4000000:
-		val = AXP813_VBUS_CLIMIT_REAL_4000mA;
-		break;
-	default:
-		return -EINVAL;
-	}
-
-	return regmap_update_bits(power->regmap,
-				  AXP22X_CHRG_CTRL3,
-				  AXP813_VBUS_CLIMIT_REAL_MASK, val);
-}
-
 static int
 axp813_set_usb_bc_enabled(struct axp20x_usb_power *power, int val)
 {
-- 
2.28.0

