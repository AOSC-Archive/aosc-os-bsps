From 3099c3550225fab6edbc2393d91cd38b3ce01d89 Mon Sep 17 00:00:00 2001
From: Tobias Schramm <tobias@t-sys.eu>
Date: Sat, 9 Nov 2019 21:01:38 +0100
Subject: [PATCH 38/44] rk808: Poweroff on syscore powerdown if pm_power_off
 not available

Due to the inherent limitation of supporting only a single pm_power_off
function the rk808 will now power off on syscore_powerdown if platform
power control was requested
---
 drivers/mfd/rk808.c       | 40 +++++++++++++++++++++++++++------------
 include/linux/mfd/rk808.h |  1 +
 2 files changed, 29 insertions(+), 12 deletions(-)

diff --git a/drivers/mfd/rk808.c b/drivers/mfd/rk808.c
index 050478cabc95..0212f256c16f 100644
--- a/drivers/mfd/rk808.c
+++ b/drivers/mfd/rk808.c
@@ -526,15 +526,26 @@ static void rk8xx_syscore_shutdown(void)
 	struct rk808 *rk808 = i2c_get_clientdata(rk808_i2c_client);
 	int ret;
 
-	if (system_state == SYSTEM_POWER_OFF &&
-	    (rk808->variant == RK809_ID || rk808->variant == RK817_ID)) {
-		ret = regmap_update_bits(rk808->regmap,
-					 RK817_SYS_CFG(3),
-					 RK817_SLPPIN_FUNC_MSK,
-					 SLPPIN_DN_FUN);
-		if (ret) {
-			dev_warn(&rk808_i2c_client->dev,
-				 "Cannot switch to power down function\n");
+	if (system_state == SYSTEM_POWER_OFF) {
+		switch(rk808->variant) {
+		case RK809_ID:
+		case RK817_ID:
+			ret = regmap_update_bits(rk808->regmap,
+						 RK817_SYS_CFG(3),
+						 RK817_SLPPIN_FUNC_MSK,
+						 SLPPIN_DN_FUN);
+			if (ret) {
+				dev_warn(&rk808_i2c_client->dev,
+					 "Cannot switch to power down function\n");
+			}
+			break;
+		case RK808_ID:
+			if(rk808->use_syscore_powerdown) {
+				rk808_device_shutdown();
+			}
+			break;
+		default:
+			break;
 		}
 	}
 }
@@ -617,6 +628,7 @@ static int rk808_probe(struct i2c_client *client,
 		cells = rk808s;
 		nr_cells = ARRAY_SIZE(rk808s);
 		rk808->pm_pwroff_fn = rk808_device_shutdown;
+		register_syscore_ops(&rk808_syscore_ops);
 		break;
 	case RK818_ID:
 		rk808->regmap_cfg = &rk818_regmap_config;
@@ -688,9 +700,13 @@ static int rk808_probe(struct i2c_client *client,
 
 	pm_off = of_property_read_bool(np,
 				"rockchip,system-power-controller");
-	if (pm_off && !pm_power_off) {
-		rk808_i2c_client = client;
-		pm_power_off = rk808->pm_pwroff_fn;
+	if (pm_off) {
+		if (pm_power_off) {
+			rk808->use_syscore_powerdown = true;
+		} else {
+			rk808_i2c_client = client;
+			pm_power_off = rk808->pm_pwroff_fn;
+		}
 	}
 
 	if (pm_off && !pm_power_off_prepare) {
diff --git a/include/linux/mfd/rk808.h b/include/linux/mfd/rk808.h
index 7cfd2b0504df..0ad84aefb1d0 100644
--- a/include/linux/mfd/rk808.h
+++ b/include/linux/mfd/rk808.h
@@ -622,5 +622,6 @@ struct rk808 {
 	const struct regmap_irq_chip	*regmap_irq_chip;
 	void				(*pm_pwroff_fn)(void);
 	void				(*pm_pwroff_prep_fn)(void);
+	bool				use_syscore_powerdown;
 };
 #endif /* __LINUX_REGULATOR_RK808_H */
-- 
2.23.0

